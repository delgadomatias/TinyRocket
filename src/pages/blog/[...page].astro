---
import BlogHeader from '../../components/BlogHeader.astro'
import BlogPostPreview from '../../components/BlogPostPreview.astro'
import Page from '../../components/Page.astro'

export async function getStaticPaths({ paginate }) {

    let allPosts = await Astro.glob('../blog/*.md')
    allPosts = allPosts.sort(
        (a, b) => new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf())

    return paginate(allPosts, { pageSize: 3 });
}
// All paginated data is passed on the "page" prop
const { page } = Astro.props

const title = 'Blog Posts'
const description = 'A SAMPLE BLOG'
---

<Page {title} {description}>

    <BlogHeader />

    <div class='flex justify-center'>
        <div class='text-lg w-5/6 lg:w-3/4'>
            <div>
                <p class='my-6 font-semibold'>
                    {description}
                </p>
            </div>

            {page.data.map((p) =>
            <BlogPostPreview post={p} />
            )}

            <nav class="grid grid-cols-3" aria-label="Pagination">
                <div class='text-left'>
                    {page.url.prev && (
                    <a class='font-light underline underline-offset-2 decoration-dashed' href={page.url.prev || '#' }>
                        &larr; Newer
                    </a>
                    )}
                </div>
                <div class='text-center font-extralight'>
                    Page {page.currentPage} / {page.lastPage}
                </div>
                <div class='text-right'>
                    {page.url.next && (
                    <a class='font-light underline underline-offset-2 decoration-dashed' href={page.url.next || '#' }>
                        Older &rarr;
                    </a>
                    )}
                </div>
            </nav>
        </div>
    </div>
</Page>